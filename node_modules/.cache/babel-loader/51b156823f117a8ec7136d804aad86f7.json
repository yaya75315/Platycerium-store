{"ast":null,"code":"import decode from\"jwt-decode\";var JWT=\"store_token_id\";var setToken=function setToken(token){localStorage.setItem(JWT,token);};var getToken=function getToken(token){return localStorage.getItem(JWT);};var isLogin=function isLogin(){var jwToken=getToken();return!!jwToken&&!isTokenExpired(jwToken);};var isTokenExpired=function isTokenExpired(token){try{var _info=decode(token);if(_info.exp<Date.now()/1000){return true;}else return false;}catch(error){return false;}};var getUser=function getUser(){var jwToken=getToken();if(isLogin()){var user=decode(jwToken);return user;}else{return null;}};var logout=function logout(){localStorage.removeItem(JWT);};global.auth={setToken:setToken,getUser:getUser,isLogin:isLogin,logout:logout,getToken:getToken};","map":{"version":3,"sources":["/Users/wangyazhi/Documents/作品集/Platycerium-store/online-store/src/commons/auth.js"],"names":["decode","JWT","setToken","token","localStorage","setItem","getToken","getItem","isLogin","jwToken","isTokenExpired","_info","exp","Date","now","error","getUser","user","logout","removeItem","global","auth"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,YAAnB,CAEA,GAAMC,CAAAA,GAAG,CAAG,gBAAZ,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1BC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAA0BE,KAA1B,EACD,CAFD,CAIA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,KAAD,CAAW,CAC1B,MAAOC,CAAAA,YAAY,CAACG,OAAb,CAAqBN,GAArB,CAAP,CACD,CAFD,CAIA,GAAMO,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAMC,CAAAA,OAAO,CAAGH,QAAQ,EAAxB,CAEA,MAAO,CAAC,CAACG,OAAF,EAAa,CAACC,cAAc,CAACD,OAAD,CAAnC,CACD,CAJD,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACP,KAAD,CAAW,CAChC,GAAI,CACF,GAAMQ,CAAAA,KAAK,CAAGX,MAAM,CAACG,KAAD,CAApB,CACA,GAAIQ,KAAK,CAACC,GAAN,CAAYC,IAAI,CAACC,GAAL,GAAa,IAA7B,CAAmC,CACjC,MAAO,KAAP,CACD,CAFD,IAEO,OAAO,MAAP,CACR,CAAC,MAAOC,KAAP,CAAc,CACd,MAAO,MAAP,CACD,CACF,CATD,CAWA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,GAAMP,CAAAA,OAAO,CAAGH,QAAQ,EAAxB,CAEA,GAAIE,OAAO,EAAX,CAAe,CACb,GAAMS,CAAAA,IAAI,CAAGjB,MAAM,CAACS,OAAD,CAAnB,CAEA,MAAOQ,CAAAA,IAAP,CACD,CAJD,IAIO,CACL,MAAO,KAAP,CACD,CACF,CAVD,CAYA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBd,YAAY,CAACe,UAAb,CAAwBlB,GAAxB,EACD,CAFD,CAIAmB,MAAM,CAACC,IAAP,CAAc,CACZnB,QAAQ,CAARA,QADY,CAEZc,OAAO,CAAPA,OAFY,CAGZR,OAAO,CAAPA,OAHY,CAIZU,MAAM,CAANA,MAJY,CAKZZ,QAAQ,CAARA,QALY,CAAd","sourcesContent":["import decode from \"jwt-decode\";\n\nconst JWT = \"store_token_id\";\n\nconst setToken = (token) => {\n  localStorage.setItem(JWT, token);\n};\n\nconst getToken = (token) => {\n  return localStorage.getItem(JWT);\n};\n\nconst isLogin = () => {\n  const jwToken = getToken();\n\n  return !!jwToken && !isTokenExpired(jwToken);\n};\n\nconst isTokenExpired = (token) => {\n  try {\n    const _info = decode(token);\n    if (_info.exp < Date.now() / 1000) {\n      return true;\n    } else return false;\n  } catch (error) {\n    return false;\n  }\n};\n\nconst getUser = () => {\n  const jwToken = getToken();\n\n  if (isLogin()) {\n    const user = decode(jwToken);\n\n    return user;\n  } else {\n    return null;\n  }\n};\n\nconst logout = () => {\n  localStorage.removeItem(JWT);\n};\n\nglobal.auth = {\n  setToken,\n  getUser,\n  isLogin,\n  logout,\n  getToken,\n};\n"]},"metadata":{},"sourceType":"module"}